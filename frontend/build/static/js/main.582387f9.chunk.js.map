{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","constants/routes.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/PasswordChange/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/Buy/data/Data.js","components/Buy/index.js","config.js","components/Wallet/index.js","components/About/index.js","components/Blog/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","BUY","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationNonAuth","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","pills","className","NavItem","NavLink","NavbarText","NavigationAuth","Navigation","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","ROUTES","catch","preventDefault","onChange","target","name","isInvalid","Container","Form","Row","form","Col","md","FormGroup","Label","for","Input","id","placeholder","Button","primary","disabled","size","propTypes","fluid","PropTypes","oneOfType","bool","string","SignUpLink","to","SignUpForm","SignUpPage","PasswordForgetFormBase","InputGroup","InputGroupAddon","message","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordChangeForm","PasswordChange","Admin","pesa","currencies","code","sellRate","buyRate","sign","initial","BuyPage","currencyA","currencyB","currencyAval","currencyBval","rate","onChangeHandler","bind","e","currency","num","x","newValueA","currentTarget","Number","parseFloat","toFixed","toLocaleString","newValueB","replace","fetch","response","json","data","btckes","console","log","sm","offset","step","addonType","max","WalletPage","row","AboutPage","Spinner","BlogPage","exact","path","component","AccountPage","AdminPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.582387f9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n\n// const config = {\n//   apiKey: process.env.REACT_APP_API_KEY,\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASE_URL,\n//   projectId: process.env.REACT_APP_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n// };\n\nconst config = {\n  apiKey: \"AIzaSyD8-uaRhDt0cacDLMkyS76LWWYB6HEYO6s\",\n  authDomain: \"satcollector1.firebaseapp.com\",\n  databaseURL: \"https://satcollector1.firebaseio.com\",\n  projectId: \"satcollector1\",\n  storageBucket: \"satcollector1.appspot.com\",\n  messagingSenderId: \"86885810150\",\n};\n\n\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n  \n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n  \n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  \n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n  user = uid => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref('users');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\n\nexport { FirebaseContext, withFirebase };\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BUY = '/buybitcoin';\nexport const WALLET = '/wallet';\nexport const ABOUT = '/about';\nexport const BLOG = '/blog';","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\nexport default withFirebase(SignOutButton);","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          authUser: null,\n        };\n      }\n\n      componentDidMount() {\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\n          authUser => {\n            authUser\n              ? this.setState({ authUser })\n              : this.setState({ authUser: null });\n            },\n        );\n      }\n    \n      componentWillUnmount() {\n        this.listener();\n      }\n\n       render() {\n           return (\n             <AuthUserContext.Provider value={this.state.authUser}>\n               <Component {...this.props} />\n             </AuthUserContext.Provider>\n           );\n       }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n      componentDidMount() {\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\n          authUser => {\n            if (!condition(authUser)) {\n              this.props.history.push(ROUTES.SIGN_IN);\n            }\n          },\n        );\n    }\n\n    componentWillUnmount() {\n        this.listener();\n    }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n            {authUser =>\n              condition(authUser) ? <Component {...this.props} /> : null\n            }\n          </AuthUserContext.Consumer>\n        );\n    }\n}\n    \n\n    return compose(\n        withRouter,\n        withFirebase,\n      )(WithAuthorization);\n    };\n\n    export default withAuthorization;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\n\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\n\nconst NavigationNonAuth = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n\n  return (\n    <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/buybitcoin\">SatCollector</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav pills className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/buybitcoin/\">Buy bitcoin</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/wallet/\">Wallet</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText>\n          <NavLink href=\"/signin/\">Log In</NavLink>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    \n  );\n};\n\nconst Navigation = () => (\n  \n  <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  \n  return (\n    <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/buybitcoin/\">SATCOLLECTOR</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav pills className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/buybitcoin/\">Buy bitcoin</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/wallet/\">Wallet</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/account/\">Profile</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText>\n          <NavLink href=\"/signin/\">Log In</NavLink>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n  );\n};\n\n\n\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { PropTypes } from 'prop-types';\n\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\n\nconst SignUpPage = () => (\n  <Container>\n    <h1>\n        Sign Up\n    </h1>\n    <br/>\n    <SignUpForm />\n  </Container>\n);\n\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.BUY);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n\n      return (\n        <Container>\n          <Form onSubmit={this.onSubmit}>\n          {/* <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>Sign Up</Col>\n          </Row> */}\n          <Row form>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Email</Label>\n                <Input type=\"email\" name=\"email\" value={email} onChange={this.onChange} id=\"exampleEmail\" placeholder=\"Email address\" />\n\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"exampleUsername\">Username</Label>\n                <Input type=\"text\" name=\"username\" value={username} onChange={this.onChange} id=\"exampleUsername\" placeholder=\"Your Username\" />\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <FormGroup>\n              <Label for=\"examplePasswordOne\">Password</Label>\n              <Input type=\"password\" name=\"passwordOne\" value={passwordOne} onChange={this.onChange} id=\"examplePasswordOne\" placeholder=\"Password\"/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"eexamplePasswordTwo\">Confirm Password</Label>\n            <Input type=\"password\" name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} id=\"examplePasswordTwo\" placeholder=\"Confirm Password\"/>\n          </FormGroup>\n          <FormGroup>\n            <Button primary disabled={isInvalid} type=\"submit\" color=\"primary\" size=\"lg\">\n              Sign Up\n            </Button>\n          </FormGroup>\n      </Form>\n      </Container>\n    );\n\n\n//// SEMANTIC-UI ////\n\n    // return (\n    //   <Grid centered columns={2}>\n    //       <Grid.Column>\n    //         {/* <Header as=\"h2\" textAlign=\"center\">\n    //           CreateAccount\n    //         </Header> */}\n    //         <Segment>\n    //           <Form size=\"large\" onSubmit={this.onSubmit}>\n    //             <Form.Input\n    //               fluid\n    //               icon=\"user\"\n    //               iconPosition=\"left\"\n    //               name=\"email\"\n    //               value={email}\n    //               onChange={this.onChange}\n    //               type=\"text\"\n    //               placeholder=\"Email address\"\n    //             />\n    //             <Form.Input\n    //               fluid \n    //               icon=\"lock\"\n    //               iconPosition=\"left\"\n    //               name=\"passwordOne\"\n    //               value={passwordOne}\n    //               onChange={this.onChange}\n    //               placeholder=\"Password\"\n    //               type=\"password\"\n    //             />\n    //             <Form.Input\n    //               fluid\n    //               icon=\"lock\"\n    //               iconPosition=\"left\"\n    //               name=\"passwordTwo\"\n    //               value={passwordTwo}\n    //               onChange={this.onChange}\n    //               placeholder=\"Password\"\n    //               type=\"password\"\n    //             />\n    //             <Button color=\"blue\" fluid size=\"large\" primary disabled={isInvalid} type=\"submit\">\n    //       Sign Up\n    //             </Button>\n    //           </Form>\n    //         </Segment>\n    //         <Message>\n    //           Not registered yet? <a href=\"#\">Sign Up</a>\n    //         </Message>\n    //       </Grid.Column>\n    //   </Grid>\n    // );\n\n    //// PLAIN REACT ///\n      // <form onSubmit={this.onSubmit}>\n      //   <Form.Field>\n      //       <label>Username</label>\n      //       <input\n      //         name=\"username\"\n      //         value={username}\n      //         onChange={this.onChange}\n      //         type=\"text\"\n      //         placeholder=\"Full Name\"\n      //       />\n      //   </Form.Field>\n      //   <Form.Field>\n      //       <label>Email</label>\n      //       <input\n      //         name=\"email\"\n      //         value={email}\n      //         onChange={this.onChange}\n      //         type=\"text\"\n      //         placeholder=\"Email Address\"\n      //       />\n      //   </Form.Field>\n      //   <Form.Group widths=\"equal\">\n      //       <Form.Field>\n      //         <label>Password</label>\n      //         <input\n      //           name=\"passwordOne\"\n      //           value={passwordOne}\n      //           onChange={this.onChange}\n      //           type=\"password\"\n      //           placeholder=\"Password\"\n      //         />\n      //       </Form.Field>\n      //       <Form.Field>\n      //         <label>Confirm Password</label>\n      //         <input\n      //           name=\"passwordTwo\"\n      //           value={passwordTwo}\n      //           onChange={this.onChange}\n      //           type=\"password\"\n      //           placeholder=\"Confirm Password\"\n      //         />\n      //       </Form.Field>\n      //     </Form.Group>\n      //   <Button primary disabled={isInvalid} type=\"submit\">\n      //     Sign Up\n      //   </Button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n  };\n}\n\nContainer.propTypes = {\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n  // applies .container-fluid class if bool or .container-{breakpoint} if string\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Container, Row, Col, Input, InputGroupAddon, InputGroup, Form, Button } from 'reactstrap';\n\nconst PasswordForgetPage = () => (\n  <Container>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </Container>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Row>\n          <Col md={6}>\n            <InputGroup>\n               <Input placeholder=\"Email address\" name=\"email\" value={this.state.email} onChange={this.onChange} type=\"email\" />\n            </InputGroup>\n          </Col>\n          <Col md={6}>\n            <InputGroup>\n              <InputGroupAddon> <Button disabled={isInvalid} type=\"submit\" color=\"danger\">Reset My Password</Button></InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nconst SignInPage = () => (\n  <div>\n    {/* <h1>SignIn</h1> */}\n    <SignInForm />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.BUY);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <Container>\n        <Form onSubmit={this.onSubmit}>\n        <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Email</Label>\n                <Input type=\"email\" name=\"email\" value={email} onChange={this.onChange} id=\"exampleEmail\" placeholder=\"Email address\" />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"examplePasswordOne\">Password</Label>\n                <Input type=\"password\" name=\"password\" value={password} onChange={this.onChange} id=\"examplePasswordOne\" placeholder=\"Password\" />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Button\n          primary disabled={isInvalid} type=\"submit\" color=\"primary\" size=\"lg\">\n              Sign In\n          </Button>\n          <FormGroup>\n            <PasswordForgetLink />\n          </FormGroup>\n          <FormGroup>\n            <SignUpLink />\n          </FormGroup>\n        </Form>\n      </Container>\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"password\"\n      //     value={password}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Sign In\n      //   </button>\n      //   {error && <p>{error.message}</p>}\n      // </form>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\nexport default withFirebase(PasswordChangeForm);\n\n\n\n// import React, { Component } from 'react';\n\n// import { withFirebase } from '../Firebase';\n\n// import { Form, Message, Button } from 'semantic-ui-react';\n\n// const INITIAL_STATE = {\n//   passwordOne: '',\n//   passwordTwo: '',\n//   error: null,\n// };\n\n// class PasswordChangeForm extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = { ...INITIAL_STATE };\n//   }\n\n//   onSubmit = event => {\n//     const { passwordOne } = this.state;\n\n//     this.props.firebase\n//       .doPasswordUpdate(passwordOne)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n\n//   render() {\n//     const { passwordOne, passwordTwo, error } = this.state;\n\n//     const isInvalid =\n//       passwordOne !== passwordTwo || passwordOne === '';\n\n//     return (\n//       <Form onSubmit={this.onSubmit}>\n//         {error && (\n//           <Message negative>\n//             <p>{error.message}</p>\n//           </Message>\n//         )}\n//         <Form.Group widths=\"equal\">\n//           <Form.Field>\n//             <label>Old Password</label>\n//             <input\n//               name=\"passwordOne\"\n//               value={passwordOne}\n//               onChange={this.onChange}\n//               type=\"password\"\n//               placeholder=\"New Password\"\n//             />\n//           </Form.Field>\n//           <Form.Field>\n//             <label>New Password</label>\n//             <input\n//               name=\"passwordTwo\"\n//               value={passwordTwo}\n//               onChange={this.onChange}\n//               type=\"password\"\n//               placeholder=\"Confirm New Password\"\n//             />\n//           </Form.Field>\n//         </Form.Group>\n//         <Button primary disabled={isInvalid} type=\"submit\">\n//           Reset My Password\n//         </Button>\n//       </Form>\n//     );\n//   }\n// }\n\n// export default withFirebase(PasswordChangeForm);\n\n","// import React from 'react';\n// import { withAuthorization } from '../Session';\n// const HomePage = () => (\n//   <div>\n//     <h1>Home Page</h1>\n//     <p>The Home Page is accessible by every signed in user.</p>\n//   </div>\n// );\n// const condition = authUser => !!authUser;\n// export default withAuthorization(condition)(HomePage);\n\n\n\nimport React from 'react';\n// import { compose } from 'recompose';\n\nimport { withAuthorization} from '../Session';\n// import Messages from '../Messages';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n\n    {/* <Messages /> */}\n  </div>\n);\n\n// const condition = authUser => !!authUser;\n\n// export default compose(\n//   withEmailVerification,\n//   withAuthorization(condition),\n// )(HomePage);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage);","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n// import { withAuthorization } from '../Session';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\n\n\n\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","import React from 'react';\nconst Admin = () => (\n  <div>\n    <h1>Admin</h1>\n  </div>\n);\nexport default Admin;","const pesa = {\n    currencies: [\n        {\n            code: \"KSH\",\n            sellRate: 1.00,\n            buyRate : 980000,\n            name: \"Kenyan Shilling\",\n            sign: \"KSH\",\n            initial: 0\n        },\n        {\n            code: \"BTC\",\n            sellRate: 0.00000109,\n            name: \"Bitcoins\",\n            sign: \"₿\",\n            initial: 0\n        }\n        \n    ]\n}\n\nexport default pesa;","import React, { Component } from 'react';\nimport pesa from './data/Data';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input,InputGroup, InputGroupAddon} from 'reactstrap';\nimport {btckesapiurl} from '../../config'; \n\nexport class BuyPage extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      currencyA: pesa.currencies[0],\n      currencyB: pesa.currencies[1],\n      currencyAval: pesa.currencies[0].initial,\n      currencyBval: pesa.currencies[1].initial,\n      rate: '',\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  onChangeHandler(e, currency){\n  \n    const {currencyA, rate} = this.state;\n    const btcformat = (x) => Number.parseFloat(x).toFixed(8).toLocaleString();\n\n    function currencyFormat(num) {\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    }\n\n\n    if(currency === 'A'){\n      const newValueA = e.currentTarget.value;\n      const rate = this.state;\n      this.setState({\n        currencyAval: newValueA,\n        currencyBval:btcformat(newValueA / this.state.rate)\n    \n      })\n\n    } else if(currency === 'B'){\n      const newValueB = e.currentTarget.value;\n      const rate = this.state;\n      this.setState({\n        currencyAval: currencyFormat(newValueB * this.state.rate),\n        currencyBval: newValueB,\n        \n      })\n\n    }\n\n  };\n\n\n  componentDidMount () {\n    fetch(`${btckesapiurl}${'/rate'}`)\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({ rate: data.btckes });\n        console.log(data)\n        console.log(this.state.rate)\n  })\n  \n  }\n\n  render(){\n    const {currencyA, currencyB, currencyAval, currencyBval, rate,newValueA, newValueB} = this.state;\n   \n    return (\n      <Container>\n      <Form>\n      <Row>\n         <Col sm=\"12\" md={{ size: 6, offset: 3 }}><h2>Buy bitcoins via M-Pesa</h2></Col>\n      </Row>\n      <br/>\n      <br/>\n      <br/>\n\n      <Row form>\n          <Col md={5}>\n            <FormGroup>\n            <Label for=\"exampleEmail\">I want to spend</Label>\n            </FormGroup>\n\n            <InputGroup>\n                \n                <Input placeholder=\"Amount of Ksh\" step=\"0.01\" value = {currencyAval} type={Number} onChange={(e) => \n                  {this.onChangeHandler(e, 'A');\n                }}/>\n                <InputGroupAddon addonType=\"prepend\">{currencyA.code}</InputGroupAddon>\n            </InputGroup>\n          </Col>\n          \n          <Col md={5}>\n            <FormGroup>\n            <Label for=\"exampleEmail\">I want to buy</Label>\n            </FormGroup>\n  \n          <InputGroup>\n              \n              <Input placeholder=\"Amount of bitcoins\" max={1000} step=\"any\" value={currencyBval} type= {Number} onChange={(e) => {\n                this.onChangeHandler(e, 'B');\n                }}  />\n    \n              <InputGroupAddon addonType=\"prepend\">{currencyB.code}</InputGroupAddon>\n          </InputGroup>\n          </Col>\n      </Row>\n      <br/>\n      <br/>\n      \n      <FormGroup>\n        <Button type=\"submit\" color=\"primary\" size=\"lg\">\n          NEXT\n        </Button>\n      </FormGroup>\n      <br/>\n\n      <Row>\n          {/* <Col md={6}>\n            <p>\n              Exchange Rate: {`${currencyA.sellRate} ${currencyA.code}`} = {`${1/rate} ${currencyB.code}`}\n            </p>\n          </Col> */}\n\n          <Col md={12}>\n            <p>\n            Exchange Rate: 1 {currencyB.code} = {`${rate} ${currencyA.code}`}\n            </p>\n          </Col>\n      </Row>\n      </Form>\n      \n\n  </Container>\n  );\n }\n}\nexport default BuyPage;\n\n\n","const production = false;\n\nexport const btckesapiurl = production ? 'https://satcollector.com' : 'http://localhost:3001';\n","import React from 'react';\nimport { Col, Container, Table, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nconst WalletPage = (props) => {\n  return (\n    <Container>\n     <Form>\n      <FormGroup row>\n        <Label for=\"bitcoinBalance\" sm={2}>Bitcoin balance</Label>\n        <Col sm={10}>\n          <Input type=\"text\" name=\"sendTo\" id=\"sendTo\" placeholder=\"\" />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"sendTo\" sm={2}>Send to</Label>\n        <Col sm={10}>\n          <Input type=\"text\" name=\"sendTo\" id=\"sendTo\" placeholder=\"\" />\n          \n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"amount\" sm={2}>Amount</Label>\n        <Col sm={10}>\n          <Input type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"\" />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"transactionCost\" sm={2}>Transaction cost</Label>\n        <Col sm={10}>\n          <Input type=\"text\" name=\"sendTo\" id=\"sendTo\" placeholder=\"\" />\n          </Col>\n      </FormGroup>\n      <FormGroup>    \n        <Button type=\"submit\" color=\"primary\" size=\"lg\">\n            Send\n        </Button>\n      </FormGroup>\n      <FormGroup>\n          <td></td>\n      </FormGroup>\n    </Form>\n\n    </Container>\n    \n  );\n  }\n\nexport default WalletPage;","import React from 'react';\nimport { Container, Spinner } from 'reactstrap';\n\nconst AboutPage = (props) => {\n  return (\n      <Container className=\"themed-container\" fluid={true}>\n          <h3> Coming Soon </h3>\n          <div>\n            <Spinner type=\"grow\" color=\"primary\" />\n            <Spinner type=\"grow\" color=\"secondary\" />\n            <Spinner type=\"grow\" color=\"success\" />\n            <Spinner type=\"grow\" color=\"danger\" />\n            <Spinner type=\"grow\" color=\"warning\" />\n            <Spinner type=\"grow\" color=\"info\" />\n            <Spinner type=\"grow\" color=\"light\" />\n            <Spinner type=\"grow\" color=\"dark\" />\n         </div>\n\n      </Container>\n    \n  );\n}\n\nexport default AboutPage;","import React from 'react';\nimport { Container, Spinner } from 'reactstrap';\n\nconst BlogPage = (props) => {\n  return (\n      <Container className=\"themed-container\" fluid={true}>\n          <h3> Coming Soon </h3>\n          <div>\n            <Spinner type=\"grow\" color=\"primary\" />\n            <Spinner type=\"grow\" color=\"secondary\" />\n            <Spinner type=\"grow\" color=\"success\" />\n            <Spinner type=\"grow\" color=\"danger\" />\n            <Spinner type=\"grow\" color=\"warning\" />\n            <Spinner type=\"grow\" color=\"info\" />\n            <Spinner type=\"grow\" color=\"light\" />\n            <Spinner type=\"grow\" color=\"dark\" />\n         </div>\n\n      </Container>\n    \n  );\n}\n\nexport default BlogPage;","\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport BuyPage from '../Buy';\nimport WalletPage from '../Wallet';\nimport AboutPage from '../About';\nimport BlogPage from '../Blog';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\n    const App = () => (\n      <Router>\n        <div>\n          <Navigation />\n\n          <hr />\n\n          <Route exact path={ROUTES.LANDING} component={BuyPage} />\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route exact path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route exact path={ROUTES.HOME} component={BuyPage} />\n          <Route exact path={ROUTES.BUY} component={BuyPage} />\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n          <Route exact path={ROUTES.WALLET} component={WalletPage} />\n          <Route exact path={ROUTES.ABOUT} component={AboutPage} />\n          <Route exact path={ROUTES.BLOG} component={BlogPage} />\n        </div>\n      </Router>\n    );\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}